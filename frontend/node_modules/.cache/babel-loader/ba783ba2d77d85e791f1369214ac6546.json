{"ast":null,"code":"var _jsxFileName = \"/Users/soda/Downloads/react-tailwind-markdown/src/components/ExampleComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultMd = `\n* [x] azeazea\n\n| Feature    | Support              |\n| ---------- | -------------------- |\n| CommonMark | 100%                 |\n| GFM        | 100%                 |`;\n\nconst ExampleComponent = () => {\n  _s();\n\n  const [markdownSource, setMarkdownSource] = useState(defaultMd);\n\n  const onChange = ({\n    currentTarget: {\n      value\n    }\n  }) => {\n    setMarkdownSource(value);\n  };\n\n  const val = \"xx\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: onChange,\n      value: `MM ${val}`,\n      className: \" font-mono overflow-auto whitespace-pre border-solid border border-gray-300 resize w-full \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      remarkPlugins: [remarkGfm],\n      className: \"prose\",\n      children: markdownSource\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExampleComponent, \"afrPfebzmw4xSMJFgy8LuaYYo7k=\");\n\n_c = ExampleComponent;\nexport default ExampleComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"sources":["/Users/soda/Downloads/react-tailwind-markdown/src/components/ExampleComponent.js"],"names":["useState","ReactMarkdown","remarkGfm","defaultMd","ExampleComponent","markdownSource","setMarkdownSource","onChange","currentTarget","value","val"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA,sCANA;;AAQA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAACG,SAAD,CAApD;;AAEA,QAAMI,QAAQ,GAAG,CAAC;AAAEC,IAAAA,aAAa,EAAE;AAAEC,MAAAA;AAAF;AAAjB,GAAD,KAAkC;AACjDH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACD,GAFD;;AAGA,QAAMC,GAAG,GAAG,IAAZ;AACA,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAEH,QADZ;AAEE,MAAA,KAAK,EAAG,MAAKG,GAAI,EAFnB;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAE,CAACR,SAAD,CAA9B;AAA2C,MAAA,SAAS,EAAC,OAArD;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAqBD,CA5BD;;GAAMD,gB;;KAAAA,gB;AAgCN,eAAeA,gBAAf","sourcesContent":["import { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nconst defaultMd = `\n* [x] azeazea\n\n| Feature    | Support              |\n| ---------- | -------------------- |\n| CommonMark | 100%                 |\n| GFM        | 100%                 |`;\n\nconst ExampleComponent = () => {\n  const [markdownSource, setMarkdownSource] = useState(defaultMd);\n\n  const onChange = ({ currentTarget: { value } }) => {\n    setMarkdownSource(value);\n  };\n  const val = \"xx\"\n  return (\n    <>\n      <textarea\n        onChange={onChange}\n        value={`MM ${val}`}\n        className=\"\n          font-mono\n          overflow-auto\n          whitespace-pre\n          border-solid\n          border\n          border-gray-300\n          resize\n          w-full\n        \"\n      />\n      <ReactMarkdown remarkPlugins={[remarkGfm]} className=\"prose\">\n        {markdownSource}\n      </ReactMarkdown>\n    </>\n  );\n};\n\n\n\nexport default ExampleComponent;\n"]},"metadata":{},"sourceType":"module"}